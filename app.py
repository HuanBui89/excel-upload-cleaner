import streamlit as st
import pandas as pd
from io import BytesIO

st.set_page_config(page_title="APP T·∫†O ƒê∆†N GHN", layout="centered")
st.title("üì¶ APP T·∫†O ƒê∆†N GHN")
st.markdown("üëâ Ch·ªçn m·∫´u xu·∫•t k·∫øt qu·∫£:")

# Ch·ªçn m·∫´u
template_option = st.selectbox(
    "üìë Ch·ªçn m·∫´u:",
    ["üìó M·∫´u 1 - Ch·ªã Ti·ªÅn", "üìï M·∫´u 2 - Ch·ªã Linh", "üìò M·∫´u 3 - Ch·ªã Th√∫y"]
)

uploaded_file = st.file_uploader("üì§ T·∫£i file Excel", type=["xlsx"])

# H√†m x·ª≠ l√Ω s·∫£n ph·∫©m v√† ghi ch√∫ cho m·∫´u ch·ªã Th√∫y
def process_chi_thuy(df):
    df = df.copy()
    stt_map = {}

    for i, row in df.iterrows():
        ten_sp_goc = str(row.get("S·∫£n ph·∫©m", "")).strip()
        ghi_chu_goc = str(row.get("Ghi ch√∫", "")).strip()

        # B·ªè 3 k√Ω t·ª± ƒë·∫ßu
        sp_core = ten_sp_goc[3:].strip() if len(ten_sp_goc) > 3 else ten_sp_goc

        # STT theo t·ª´ng t√™n g·ªëc
        stt_map.setdefault(sp_core, 0)
        stt_map[sp_core] += 1
        stt = stt_map[sp_core]

        # S·∫£n ph·∫©m m·ªõi
        ten_sp_moi = f"{sp_core} D.12.6.{stt}"

        # T√¨m size t·ª´ ghi ch√∫ (v√≠ d·ª•: 50kg)
        size = ""
        for word in ghi_chu_goc.split():
            if "kg" in word.lower():
                size = word
                break

        # Ghi ch√∫ m·ªõi
        ghi_chu_moi = f"{ten_sp_moi} [{ten_sp_goc} {size}] - KH√ÅCH KH√îNG NH·∫¨N THU 30K, G·ªåI V·ªÄ SHOP KHI ƒê∆†N SAI TH√îNG TIN"

        df.at[i, "S·∫£n ph·∫©m"] = ten_sp_moi
        df.at[i, "Ghi ch√∫"] = ghi_chu_moi

    return df

# H√†m xu·∫•t file Excel
def to_excel_bytes(df):
    output = BytesIO()
    with pd.ExcelWriter(output, engine='openpyxl') as writer:
        df.to_excel(writer, index=False, sheet_name="ƒê∆°n h√†ng")
    return output.getvalue()

if uploaded_file is not None:
    df = pd.read_excel(uploaded_file)

    if "Ch·ªã Ti·ªÅn" in template_option:
        st.success("‚úÖ ƒêang x·ª≠ l√Ω theo M·∫´u 1 - Ch·ªã Ti·ªÅn")
        df_result = df.copy()  # ho·∫∑c x·ª≠ l√Ω ri√™ng theo logic ch·ªã Ti·ªÅn n·∫øu c√≥

    elif "Ch·ªã Linh" in template_option:
        st.success("‚úÖ ƒêang x·ª≠ l√Ω theo M·∫´u 2 - Ch·ªã Linh")
        df_result = df.copy()  # ho·∫∑c x·ª≠ l√Ω ri√™ng theo logic ch·ªã Linh n·∫øu c√≥

    elif "Ch·ªã Th√∫y" in template_option:
        st.success("‚úÖ ƒêang x·ª≠ l√Ω theo M·∫´u 3 - Ch·ªã Th√∫y")
        df_result = df.copy()
        df_result = process_chi_thuy(df_result)

    st.dataframe(df_result)

    # N√∫t t·∫£i v·ªÅ
    if st.button("üì• T·∫£i file k·∫øt qu·∫£"):
        excel_bytes = to_excel_bytes(df_result)
        st.download_button(
            label="üìÑ T·∫£i file Excel",
            data=excel_bytes,
            file_name="output_don_chi_thuy.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )
